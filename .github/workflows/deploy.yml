name: build

on: [push, pull_request]

jobs:
  test:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
          rust: stable
        - target: x86_64-apple-darwin
          os: macos-latest
          rust: stable

    steps:
    - uses: actions/checkout@v1
    - name: Install Rust (rustup)
      run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      shell: bash
    - run: rustup target add ${{ matrix.target }}
    - name: Build on Linux
      run: ./linux/build.sh
      if: matrix.os == 'ubuntu-latest'
      shell: bash
    - name: Build on macOS
      run: |
        brew install ninja
        ./osx/build.sh
      if: matrix.os == 'macos-latest'
      shell: bash
    - name: Upload Linux tarball
      uses: actions/upload-artifact@v2
      if: matrix.os == 'ubuntu-latest'
      with:
        name: solana-bpf-tools-linux.tar.bz2
        path: linux/out/solana-bpf-tools-linux.tar.bz2
    - name: Upload macOS tarbal
      uses: actions/upload-artifact@v2
      if: matrix.os == 'macos-latest'
      with:
        name: solana-bpf-tools-osx.tar.bz2
        path: osx/out/solana-bpf-tools-osx.tar.bz2
